generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Enterprise {
  id              Int     @id @default(autoincrement())
  legalName       String
  comercialName   String?
  registerNumber  String? // livre, genérico
  registerCountry String? // ISO 3166-1 alpha-2 ex: "PT", "US", "BR"
  registerType    String? // "NIF", "CNPJ", "EIN", "VAT", etc.
  type              String?
  foundationDate    DateTime?
  registeredCountry String?
  mainLanguage      String?
  oficialCurrency   String?
  email             String?
  phone             String?
  logo              String?

  // Relações existentes
  branches Branches[]

  // Novas relações - modelos que pertencem globalmente à empresa
  wareHouses    WareHouses[]
  equipments    Equipments[]
  transactions  Transactions[]
  taxes         Taxes[]
  clients       Clients[]
  suppliers     Suppliers[]
  transporters  Transporters[]
  documents     Documents[]
  domains       Domains[]
  internSystems InternSystems[]
  users         User[]
  campaigns     Campaigns[]
  socialMedia   SocialMedia[]
  reports       Reports[]
}

model Branches {
  id      Int     @id @default(autoincrement())
  address String
  phone   String?
  email   String?
  purpose String?

  departments Departments[]
  products Products[]
  enterpriseId Int
  enterprise   Enterprise @relation(fields: [enterpriseId], references: [id])
}

model Departments {
  id             Int     @id @default(autoincrement())
  name           String
  description    String?
  responsible    String?
  totalEmployees Int?
  budget         Budget?

  subDepartments SubDepartments?
  branches       Branches[]
  employees      Employees[]
}

model SubDepartments {
  id             Int         @id @default(autoincrement())
  name           String
  description    String?
  responsible    String?
  totalEmployees Int?
  budget         Budget?
  departmentId   Int         @unique
  department     Departments @relation(fields: [departmentId], references: [id])
}

model Employees {
  id           Int       @id @default(autoincrement())
  name         String
  email        String?
  phone        String?
  position     String?
  salary       Float?
  dateOfHire   DateTime?
  shiftType    String?
  workingHours Int?
  workingDays  Int?
  status       String?

  departmentId Int
  department   Departments @relation(fields: [departmentId], references: [id])

  Projects Projects[]
  Tasks    Tasks[]
}

model Products {
  id          Int        @id @default(autoincrement())
  name        String
  description String?
  price       Float?
  stock       Int?
  category    String?
  subCategory String?
  brand       String?
  model       String?
  sku         String?
  barcode     String?
  weight      Float?
  dimensions  String?
  imageUrl    String?
  wareHouseId Int
  wareHouse   WareHouses @relation(fields: [wareHouseId], references: [id])
  sales       Sales[]
  requests    Requests[]
  Delivery    Delivery[]

  // Conexão com filial (produtos podem variar por filial)
  branchId Int
  branch   Branches @relation(fields: [branchId], references: [id])
}

model WareHouses {
  id           Int        @id @default(autoincrement())
  name         String
  location     String
  capacity     Int?
  currentStock Int?
  section      Int?
  responsible  String?
  status       String?
  products     Products[]

  // Conexão com empresa
  enterpriseId Int
  enterprise   Enterprise @relation(fields: [enterpriseId], references: [id])
}

model Equipments {
  id              Int       @id @default(autoincrement())
  name            String
  serialNumber    String
  description     String?
  model           String?
  brand           String?
  purchaseDate    DateTime?
  warrantyEndDate DateTime?
  status          String?
  location        String?

  // Conexão com empresa
  enterpriseId Int
  enterprise   Enterprise @relation(fields: [enterpriseId], references: [id])
}

model Transactions {
  id          Int      @id @default(autoincrement())
  amount      Float
  date        DateTime
  bankAccount String
  category    String?
  description String?
  status      String?

  // Conexão com empresa
  enterpriseId Int
  enterprise   Enterprise @relation(fields: [enterpriseId], references: [id])
}

model Taxes {
  id          Int      @id @default(autoincrement())
  type        String
  amount      Float
  endDate     DateTime
  period      String?
  description String?

  // Conexão com empresa
  enterpriseId Int
  enterprise   Enterprise @relation(fields: [enterpriseId], references: [id])
}

model Budget {
  id              Int     @id @default(autoincrement())
  name            String
  amount          Float
  usedAmount      Float?
  remainingAmount Float?
  status          String?
  period          String?
  category        String?

  departmentId    Int? @unique
  subDepartmentId Int? @unique
  projectId       Int? @unique
  campaignId      Int? @unique
  saleId          Int? @unique

  department    Departments?    @relation(fields: [departmentId], references: [id])
  subDepartment SubDepartments? @relation(fields: [subDepartmentId], references: [id])
  project       Projects?       @relation(fields: [projectId], references: [id])
  campaign      Campaigns?      @relation(fields: [campaignId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Sales {
  id            Int        @id @default(autoincrement())
  total         Float
  status        String?
  paymentMethod String
  lastPurchase  DateTime?
  Products      Products[]
  ClientId      Int
  Client        Clients    @relation(fields: [ClientId], references: [id])
}

model Clients {
  id       Int        @id @default(autoincrement())
  name     String
  email    String?
  phone    String?
  type     String?
  address  String?
  Sales    Sales[]
  Requests Requests[]
  Invoices Invoices[]
  Delivery Delivery[]
  Projects Projects[]

  // Conexão com empresa
  enterpriseId Int
  enterprise   Enterprise @relation(fields: [enterpriseId], references: [id])
}

model Requests {
  id           Int        @id @default(autoincrement())
  number       String
  products     Products[]
  clientId     Int
  Client       Clients    @relation(fields: [clientId], references: [id])
  deliveryDate DateTime?
  status       String?
}

model Invoices {
  id           Int       @id @default(autoincrement())
  number       String
  ClientId     Int
  Client       Clients   @relation(fields: [ClientId], references: [id])
  registerdate DateTime
  dueDate      DateTime
  paymentDate  DateTime?
  total        Float
  status       String?
}

model Suppliers {
  id        Int         @id @default(autoincrement())
  name      String
  email     String?
  phone     String?
  address   String?
  purchases Purchases[]

  // Conexão com empresa
  enterpriseId Int
  enterprise   Enterprise @relation(fields: [enterpriseId], references: [id])
}

model Purchases {
  id          Int       @id @default(autoincrement())
  number      String
  name        String?
  description String?
  price       Float?
  category    String?
  subCategory String?
  brand       String?
  model       String?
  sku         String?
  weight      Float?
  dimensions  String?
  imageUrl    String?
  supplierId  Int
  Supplier    Suppliers @relation(fields: [supplierId], references: [id])
}

model Transporters {
  id             Int        @id @default(autoincrement())
  licensePlate   String     @unique
  vehicleType    String?
  status         String?
  extEnterprise  String?
  phone          String?
  representative String?
  operationArea  String?
  pricePerKm     Float?
  rating         Float?
  delivery       Delivery[]

  // Conexão com empresa
  enterpriseId Int
  enterprise   Enterprise @relation(fields: [enterpriseId], references: [id])
}

model Delivery {
  id            Int          @id @default(autoincrement())
  expectedDate  DateTime?
  deliveryDate  DateTime?
  status        String
  products      Products[]
  clientId      Int
  Client        Clients      @relation(fields: [clientId], references: [id])
  transporterId Int
  Transporter   Transporters @relation(fields: [transporterId], references: [id])
}

model Tasks {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  assignedTo  String?
  dueDate     DateTime?
  completed   Boolean?
  completedAt DateTime?
  status      String?
  priority    String?
  responsible Int
  Employee    Employees @relation(fields: [responsible], references: [id])
  projectId   Int
  Project     Projects  @relation(fields: [projectId], references: [id])
}

model Projects {
  id          Int         @id @default(autoincrement())
  name        String
  description String?
  startDate   DateTime?
  endDate     DateTime?
  status      String?
  progress    Float?
  priority    String?
  manager     String?
  budget      Budget?
  clientId    Int
  Client      Clients     @relation(fields: [clientId], references: [id])
  Employees   Employees[]
  Tasks       Tasks[]
  chat        Chats?
}

model Messages {
  id        Int      @id @default(autoincrement())
  content   String
  sender    String
  createdAt DateTime
  chatId    Int
  chat      Chats    @relation(fields: [chatId], references: [id])
}

model Chats {
  id        Int        @id @default(autoincrement())
  projectId Int        @unique
  project   Projects   @relation(fields: [projectId], references: [id])
  Messages  Messages[]
}

model Documents {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  type        String?
  size        Float?
  path        String

  // Conexão com empresa
  enterpriseId Int
  enterprise   Enterprise @relation(fields: [enterpriseId], references: [id])
}

model Domains {
  id             Int       @id @default(autoincrement())
  name           String
  type           String?
  registrator    String?
  expirationDate DateTime?
  hosting        String?
  status         String?

  // Conexão com empresa
  enterpriseId Int
  enterprise   Enterprise @relation(fields: [enterpriseId], references: [id])
}

model InternSystems {
  id          Int     @id @default(autoincrement())
  name        String
  type        String?
  version     String?
  environment String?
  tecnology   String?
  status      String?
  Logs        Logs[]

  // Conexão com empresa
  enterpriseId Int
  enterprise   Enterprise @relation(fields: [enterpriseId], references: [id])
}

model User {
  id          Int      @id @default(autoincrement())
  name        String
  password    String
  email       String?
  permissions String?
  role        String?
  active      Boolean?
  created_at  DateTime @default(now())
  Logs        Logs[]

  // Conexão com empresa
  enterpriseId Int
  enterprise   Enterprise @relation(fields: [enterpriseId], references: [id])
}

model Logs {
  id             Int           @id @default(autoincrement())
  action         String
  level          String?
  timestamp      DateTime?
  category       String?
  InternSystemId Int
  InternSystem   InternSystems @relation(fields: [InternSystemId], references: [id])
  userId         Int
  User           User          @relation(fields: [userId], references: [id])
}

model Campaigns {
  id          Int     @id @default(autoincrement())
  name        String
  type        String?
  status      String?
  leads       Int?
  conversions Int?
  roi         Float?
  budget      Budget?

  enterpriseId Int
  enterprise   Enterprise @relation(fields: [enterpriseId], references: [id])
}

model SocialMedia {
  id             Int    @id @default(autoincrement())
  platform       String
  username       String
  followers      Int?
  engagementRate Float?

  // Conexão com empresa
  enterpriseId Int
  enterprise   Enterprise @relation(fields: [enterpriseId], references: [id])
}

model Reports {
  id         Int       @id @default(autoincrement())
  name       String
  path       String
  type       String?
  frequency  String?
  status     String?
  lastUpdate DateTime?
  nextUpdate DateTime?
  downloads  Int?

  // Conexão com empresa
  enterpriseId Int
  enterprise   Enterprise @relation(fields: [enterpriseId], references: [id])
}
